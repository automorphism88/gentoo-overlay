#!/sbin/openrc-run

description="Best-Effort Extent-Same, a btrfs dedup agent"
command=/usr/libexec/bees
command_background=yes
pidfile="/run/${RC_SVCNAME}.pid"
procname=
output_log="${BEES_LOGFILE:-/var/log/${RC_SVCNAME}.log}"
error_log="${BEES_LOGFILE:-/var/log/${RC_SVCNAME}.log}"
SSD_NICELEVEL="${BEES_NICELEVEL:-19}"
SSD_IONICELEVEL="${BEES_IONICELEVEL:-3}"
SSD_STARTWAIT="${BEES_STARTWAIT:-1000}"

depend() {
    need localmount
}

start_pre() {
    if [ -z "${UUID}" ] ||
	   [ "${UUID}" = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" ]
    then
	eerror "UUID not defined in /etc/conf.d/${RC_SVCNAME}"
	return 1
    elif [ "$(blkid -s TYPE -o value "/dev/disk/by-uuid/${UUID}")" != "btrfs" ]
    then
	eerror "/dev/disk/by-uuid/${UUID} is not btrfs"
	return 1
    fi
    work_dir="${WORK_DIR:-/run/${RC_SVCNAME}}"
    mnt_dir="${MNT_DIR:-${work_dir}/mnt/${UUID}}"
    mkdir -p "${work_dir}" "${mnt_dir}"
    checkpath -d "${work_dir}" "${mnt_dir}"
    directory="$(realpath "${mnt_dir}")"
    command_args="${OPTIONS} ${directory}"
    BEESHOME="${BEESHOME:-${mnt_dir}/.beeshome}"
    BEESSTATUS="${BEESSTATUS:-${work_dir}/${UUID}.status}"
    service_set_value "directory" "${directory}"
    if mountpoint -q "${directory}" ; then
	ewarn "${directory} is already mounted"
	service_set_value "mounted_at_start" "0"
    else
	ebegin "Mounting /dev/disk/by-uuid/${UUID}" at "${directory}"
	mount -o noatime,subvolid=5 \
	      "/dev/disk/by-uuid/${UUID}" \
	      "${directory}"
	eend $? || return 1
	service_set_value "mounted_at_start" "1"
    fi
    if ! [ -d "${BEESHOME}" ] ; then
	ebegin "Creating subvolume ${BEESHOME}"
	btrfs sub create "${BEESHOME}"
	eend $? || return 1
    elif [ "$(stat -c %i "${BEESHOME}")" != 256 ] ; then
	eerror "BEESHOME=${BEESHOME} must be a subvolume"
	return 1
    fi
    AL16M="$((16*1024*1024))"
    db_size="${DB_SIZE:-$((64*AL16M))}"
    db_path="${BEESHOME}/beeshash.dat"
    touch "${db_path}" || return 1
    if [ "${db_size}" -lt "${AL16M}" ] ||
	   [ "$((db_size % AL16M))" != 0 ]
    then
	eerror "DB_SIZE must be a multiple of 16M"
	return 1
    elif [ "$(stat -c %s "${db_path}")" != "${db_size}" ] ; then
	ewarn "Resizing ${db_path} to ${db_size}"
	[ -f "${BEESHOME}/beescrawl.${UUID}.dat" ] &&
	    rm -f "${BEESHOME}/beescrawl.${UUID}.dat" || return 1
	truncate -s "${db_size}" "${db_path}" || return 1
    fi
    chmod 600 "${db_path}" || return 1
    export BEESHOME BEESSTATUS SSD_NICELEVEL SSD_IONICELEVEL SSD_STARTWAIT
}

stop_post() {
    [ "$(service_get_value "mounted_at_start")" = "1" ] &&
	umount -l "$(service_get_value "directory")"
    return 0
}
